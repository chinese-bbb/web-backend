"""
add flask_user required field.

Revision ID: 2c3c245b5ea6
Revises:
Create Date: 2019-09-08 18:06:57.170638
"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '2c3c245b5ea6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
        sa.UniqueConstraint('name', name=op.f('uq_roles_name')),
    )
    op.create_table(
        'user_roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('role_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['roles.id'],
            name=op.f('fk_user_roles_role_id_roles'),
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
            name=op.f('fk_user_roles_user_id_user'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_user_roles')),
    )
    op.create_index(
        op.f('ix_comment_complaint_id'), 'comment', ['complaint_id'], unique=False
    )
    op.create_index(
        op.f('ix_comment_timestamp'), 'comment', ['timestamp'], unique=False
    )
    op.create_index(op.f('ix_comment_user_id'), 'comment', ['user_id'], unique=False)
    op.create_foreign_key(
        op.f('fk_complaint_user_id_user'), 'complaint', 'user', ['user_id'], ['id']
    )
    op.alter_column(
        'fuzzy_search_raw',
        'storage',
        existing_type=mysql.JSON(),
        comment=None,
        existing_comment='企查查查询结果json序列化',
        existing_nullable=True,
    )
    op.alter_column(
        'merchant_query_raw',
        'storage',
        existing_type=mysql.JSON(),
        comment=None,
        existing_comment='企查查查询结果json序列化',
        existing_nullable=True,
    )
    op.add_column('user', sa.Column('password', sa.String(length=128), nullable=True))
    op.alter_column(
        'user', 'last_name', existing_type=mysql.VARCHAR(length=120), nullable=False
    )
    op.alter_column(
        'user', 'sex', existing_type=mysql.VARCHAR(length=120), nullable=False
    )
    op.alter_column(
        'user', 'username', existing_type=mysql.VARCHAR(length=64), nullable=False
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.alter_column(
        'user', 'username', existing_type=mysql.VARCHAR(length=64), nullable=True
    )
    op.alter_column(
        'user', 'sex', existing_type=mysql.VARCHAR(length=120), nullable=True
    )
    op.alter_column(
        'user', 'last_name', existing_type=mysql.VARCHAR(length=120), nullable=True
    )
    op.drop_column('user', 'password')
    op.alter_column(
        'merchant_query_raw',
        'storage',
        existing_type=mysql.JSON(),
        comment='企查查查询结果json序列化',
        existing_nullable=True,
    )
    op.alter_column(
        'fuzzy_search_raw',
        'storage',
        existing_type=mysql.JSON(),
        comment='企查查查询结果json序列化',
        existing_nullable=True,
    )
    op.drop_constraint(
        op.f('fk_complaint_user_id_user'), 'complaint', type_='foreignkey'
    )
    op.drop_index(op.f('ix_comment_user_id'), table_name='comment')
    op.drop_index(op.f('ix_comment_timestamp'), table_name='comment')
    op.drop_index(op.f('ix_comment_complaint_id'), table_name='comment')
    op.drop_table('user_roles')
    op.drop_table('roles')
    # ### end Alembic commands ###
